{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport axios from 'axios';\nlet env = process.env.APP_ENV || 'dev';\nconsole.log(`APP_ENV: ${env}`);\nlet all_games_url = \"api/odds.json?sport=nfl\";\n\nif (env === \"prod\") {\n  all_games_url = \"https://areyouwatchingthis.com/api/odds.json?sport=nfl\";\n} // let all_games_url = \"http://192.168.68.104/api/odds.json?sport=nfl\"\n\n\nexport default {\n  name: \"ShowPicks\",\n\n  data() {\n    return {\n      games: null,\n      picks: [],\n      sample_spread: 7,\n      sample_ou: 48.5,\n      editIndex: -1,\n      fontSize: 15,\n      textSizeControlStyle: {\n        textAlign: 'center',\n        cursor: 'pointer'\n      }\n    };\n  },\n\n  created() {\n    //     const result = await axios.get(\"https://localhost:8080/api/odds.json?sport=nfl\");\n    //     const games = result;\n    //     this.games = games;\n    // },\n    axios.get(all_games_url).then(response => {\n      console.log('SUCCESSFULLY HIT API'); // Only send next 20 games. No need to send more\n\n      console.log(response.data.results.slice(0, 20));\n      this.games = response.data.results.slice(0, 20); // res.send(response.data.results.slice(0,20));\n    }).catch(error => {\n      console.log(error);\n      this.errored = true;\n    });\n  },\n\n  methods: {\n    selectpicks() {\n      // Sends picks to SelectedPicks page where user will then submit picks\n      console.log(\"USERS PICKS:\");\n      console.log(this.picks);\n      this.$router.push({\n        name: \"SelectedPicks\",\n        params: {\n          picks: this.picks\n        }\n      });\n    },\n\n    validGame(game_date) {\n      // Checks if the game is valid to be shown\n      let today = new Date();\n      let next_mon = today.setDate(today.getDate() + ((1 + 7 - today.getDay()) % 7 || 7));\n      let now = Date.now();\n\n      if (now >= game_date) {\n        return false;\n      } else if (game_date > next_mon) {\n        return false;\n      } else {\n        return true;\n      } // FCT COMMENTED OUT FOR PRESEASON\n      // console.log(game_date);\n      // return true\n\n    },\n\n    epochToDate(game_date) {\n      // converts epoch to clean date\n      let date = new Date(game_date);\n      let iso = date.toLocaleDateString(\"en-US\");\n      return iso;\n    },\n\n    favOrDog(game_odds) {\n      // renders clean spread in UI depending on data passed\n      let spread = new String(game_odds.spread);\n\n      if (spread.includes(\"-\")) {\n        return [spread.replace(\"-\", \"+\"), spread];\n      } else {\n        return [\"-\" + spread, \"+\" + spread];\n      }\n    },\n\n    useDraftkings(game_odds_all_providers) {\n      // Loops through providers to find and return DRAFTKINGS\n      let num_prov = game_odds_all_providers.length;\n\n      for (var i = 0; i < num_prov; i++) {\n        var provider = game_odds_all_providers[i].provider;\n\n        if (provider === \"DRAFTKINGS\") {\n          return game_odds_all_providers[i];\n        }\n      }\n    }\n\n  } // ,\n  // mounted() {\n  //     console.log('got to mount.')\n  //     axios\n  //     .get(all_games_url)\n  //     .then(response => {\n  //         console.log('SUCCESS');\n  //         // Only send next 20 games. No need to send more\n  //         console.log(response.data.results.slice(0,20));\n  //         this.games = response.data.results.slice(0,20)\n  //         })\n  //     .catch(error => {\n  //         console.log(error)\n  //         this.errored = true\n  //         })\n  // }\n\n};","map":{"version":3,"mappings":"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","names":["axios","env","process","APP_ENV","console","log","all_games_url","name","data","games","picks","sample_spread","sample_ou","editIndex","fontSize","textSizeControlStyle","textAlign","cursor","created","get","then","response","results","slice","catch","error","errored","methods","selectpicks","$router","push","params","validGame","game_date","today","Date","next_mon","setDate","getDate","getDay","now","epochToDate","date","iso","toLocaleDateString","favOrDog","game_odds","spread","String","includes","replace","useDraftkings","game_odds_all_providers","num_prov","length","i","provider"],"sourceRoot":"","sources":["/Users/mabbate/michael-abbate/pickem-app-vue/pickem-app/src/views/ShowPicks.vue"],"sourcesContent":["<template>\n    <div id=\"show-picks\">\n        <div class=\"grid-cell\">\n            \n        </div>\n        <div class=\"grid-cell\">\n            <div id=\"all-game-tables\">\n                <div v-cloak v-for=\"(game,index) in games\" :key = \"game.gameID\" :class=\"game.gameID+'game-table'\">\n                    <table v-if=\"validGame(game.date)\" :class=\"game.gameID+'game-table'\">\n                        <tr :class=\"'away-row-'+index+'-'+game.gameID\">\n                            <td rowspan = \"2\" class=\"date-cell\">  \n                                {{ epochToDate(game.date) }}      \n                            </td>\n                            <td class = \"matchup-cell\">\n                                {{ game.team1Name }}                    \n                            </td>\n                            <label :for=\"game.gameID+'-away-label'\">\n                                <td class=\"pickem-cell\">                                              \n                                        <input v-model=\"picks\" type=\"checkbox\" :id=\"game.gameID+'-away-label'\" :value=\"game.team1Name + favOrDog(useDraftkings(game.odds))[0]\">\n                                            {{ favOrDog(useDraftkings(game.odds))[0] }}                                    \n                                </td>\n                            </label>\n                            <label :for=\"game.gameID+'-over-label'\">\n                                <td class=\"pickem-cell\">\n                                        <input v-model=\"picks\" type=\"checkbox\" :id=\"game.gameID+'-over-label'\" :value=\"game.team2Name + 'vs.' + game.team1Name + 'o' + useDraftkings(game.odds).overUnder\">\n                                            o{{ useDraftkings(game.odds).overUnder }}\n                                </td>     \n                            </label>\n                        </tr>        \n                        <tr :class=\"'home-row-'+index+'-'+game.gameID\">\n                            <td v-text = \"game.team2Name\" class = \"matchup-cell\">\n                            </td>\n                            <label :for=\"game.gameID+'-home-label'\">\n                                <td class=\"pickem-cell\">\n                                        <input v-model=\"picks\" type=\"checkbox\" :id=\"game.gameID+'-home-label'\" :value=\"game.team2Name + favOrDog(useDraftkings(game.odds))[1]\">\n                                            {{ favOrDog(useDraftkings(game.odds))[1] }}\n                                </td>\n                            </label>\n                            <label :for=\"game.gameID+'-under-label'\">\n                                <td class=\"pickem-cell\">         \n                                        <input v-model=\"picks\" type=\"checkbox\" :id=\"game.gameID+'-under-label'\" :value=\"game.team2Name + 'vs.' + game.team1Name + 'u' + useDraftkings(game.odds).overUnder\">\n                                            u{{ useDraftkings(game.odds).overUnder }} \n                                </td>     \n                            </label>        \n                        </tr>\n                        <tr><td colspan=\"4\"><hr></td></tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <div class=\"grid-cell\" id=\"selected-picks-wrapper\">\n            <div id=\"selected-picks\">\n                <strong>\n                Selected Picks:\n                    <ul>\n                        <li v-for=\"(pick,index) in picks\"\n                            :key = \"index\"\n                            :id=\"pick+'selected-pick'\">\n                            {{ pick }}\n                        </li>\n                    </ul>\n                </strong>\n                \n                <button @click = \"selectpicks()\">SELECT</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script>\n\nimport axios from 'axios';\n\nlet env = process.env.APP_ENV || 'dev';\nconsole.log(`APP_ENV: ${env}`)\nlet all_games_url = \"api/odds.json?sport=nfl\";\nif (env === \"prod\") {\n    all_games_url = \"https://areyouwatchingthis.com/api/odds.json?sport=nfl\";\n}\n\n\n// let all_games_url = \"http://192.168.68.104/api/odds.json?sport=nfl\"\n\nexport default {\n    name: \"ShowPicks\",\n    data() {\n        return {\n            games:null,\n            picks: [],                    \n            sample_spread: 7,\n            sample_ou: 48.5,\n            editIndex: -1,\n            fontSize: 15,\n            textSizeControlStyle: {\n                textAlign:'center',\n                cursor: 'pointer'\n            }\n        }\n    },\n    created() {\n    //     const result = await axios.get(\"https://localhost:8080/api/odds.json?sport=nfl\");\n    //     const games = result;\n    //     this.games = games;\n    // },\n    axios.get(all_games_url)\n    .then(response => {\n        console.log('SUCCESSFULLY HIT API');\n        // Only send next 20 games. No need to send more\n        console.log(response.data.results.slice(0,20));\n        this.games = response.data.results.slice(0,20);\n        // res.send(response.data.results.slice(0,20));\n        })\n    .catch(error => {\n        console.log(error);\n        this.errored = true;\n        })\n    }\n    ,\n\n    methods: {    \n        selectpicks() {\n            // Sends picks to SelectedPicks page where user will then submit picks\n            console.log(\"USERS PICKS:\");\n            console.log(this.picks);\n            this.$router.push({name:\"SelectedPicks\"\n                              ,params: { picks: this.picks }\n                              }\n                              );\n        },\n        validGame(game_date) {\n            // Checks if the game is valid to be shown\n            let today = new Date();\n            let next_mon = today.setDate(today.getDate() + (((1 + 7 - today.getDay()) % 7) || 7));\n            let now = Date.now();\n            if (now >= game_date) {\n                return false\n            }\n            else if (game_date > next_mon){\n                return false\n            }\n            else {\n                return true\n            }\n            \n            // FCT COMMENTED OUT FOR PRESEASON\n            // console.log(game_date);\n            // return true\n        },\n        epochToDate(game_date) {\n            // converts epoch to clean date\n            let date = new Date(game_date);\n            let iso = date.toLocaleDateString(\"en-US\")\n            return iso\n        },\n        favOrDog(game_odds) {\n            // renders clean spread in UI depending on data passed\n            let spread = new String(game_odds.spread);\n            if (spread.includes(\"-\")) {\n                return [spread.replace(\"-\",\"+\"),spread]\n            }\n            else {\n                return [\"-\"+spread, \"+\"+spread]\n            }\n        },\n        useDraftkings(game_odds_all_providers) {\n            // Loops through providers to find and return DRAFTKINGS\n            let num_prov =  game_odds_all_providers.length;\n            for (var i = 0; i < num_prov; i++) {\n                var provider = game_odds_all_providers[i].provider;\n                if (provider === \"DRAFTKINGS\") {\n                    return game_odds_all_providers[i]\n                }\n            }\n        }\n    }\n    // ,\n    // mounted() {\n    //     console.log('got to mount.')\n    //     axios\n    //     .get(all_games_url)\n    //     .then(response => {\n    //         console.log('SUCCESS');\n    //         // Only send next 20 games. No need to send more\n    //         console.log(response.data.results.slice(0,20));\n    //         this.games = response.data.results.slice(0,20)\n    //         })\n    //     .catch(error => {\n    //         console.log(error)\n    //         this.errored = true\n    //         })\n    // }\n}\n\n</script>\n\n<style scoped>\n\n#show-picks {\n    display:grid;\n    /* grid-template-columns: auto auto auto; */\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n    grid-template-rows:auto;\n\n}\n\ntable {\n    margin: 0 auto;\n    border-collapse:separate; \n    border-spacing:.5em!important;\n    color:white;\n    /* font-size: 1.2vw; */\n    font-size:1vw;\n\n}\n.matchup-cell, .date-cell {\n    /* padding-right:.5em; */\n    width: 6.5vw;\n    text-align:left;\n    color:white;\n}\n\nlabel {\n    display:table-cell;\n    background: dodgerblue;\n    color: white;\n    margin: 0 auto;\n    cursor: pointer;\n    border-radius:5px;\n    border:none;\n    width: 7vw !important;\n    height: 2vw !important;\n    align-items: middle;\n    vertical-align: middle;\n}\nlabel input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n}\n\nlabel:hover {\n    cursor: pointer;\n    background-color: white;\n    color:dodgerblue;\n    cursor:pointer;\n    font-weight: bold;\n}\n\n .pickem-cell {\n   text-align: center;\n   width: 7vw !important;\n   height: 2vw !important;\n} \n\n#selected-picks {\n    /* float:right; */\n    color:#fff;\n    font-size:1.5vw;\n    /* position: fixed; */\n    /* top:10; */\n    /* right:0; */\n    /* z-index:10; */\n    /* border: 1px solid black; */\n    background-color: dodgerblue;\n    border-radius: 8px;\n    padding:.8vw;\n    margin:0 auto;\n    width:50%;\n    /* margin-right:7vw; */\n}\n\nul, li {\n    list-style: none;\n    text-decoration-style: None;\n    text-align: left;\n    overflow-wrap: break-word;\n}\n\nbutton {\n    background-color: #1f1f1f;\n    border-radius: 8px;\n    font-size: 1vw;\n    border:none;\n    color:#fff;\n    height:2vw;\n    width:6vw;\n}\n\nbutton:hover {\n    cursor: pointer;\n    background-color: #fff;\n    font-weight:bold;\n    color:#1f1f1f;\n}\n</style>"]},"metadata":{},"sourceType":"module"}