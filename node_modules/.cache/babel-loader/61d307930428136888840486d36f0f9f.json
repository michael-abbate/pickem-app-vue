{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5cd5d7aa\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Go to Select\");\n\nconst _hoisted_2 = {\n  id: \"show-picks\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" selected picks: \");\n\nconst _hoisted_4 = {\n  class: \"matchup-cell\"\n};\nconst _hoisted_5 = {\n  class: \"pickem-cell\"\n};\nconst _hoisted_6 = [\"for\"];\nconst _hoisted_7 = [\"id\", \"value\"];\nconst _hoisted_8 = {\n  class: \"pickem-cell\"\n};\nconst _hoisted_9 = [\"textContent\"];\nconst _hoisted_10 = {\n  class: \"pickem-cell\"\n};\nconst _hoisted_11 = [\"for\"];\nconst _hoisted_12 = [\"id\", \"value\"];\nconst _hoisted_13 = [\"textContent\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <button @click=\\\"selectpicks()\\\">Go to Select</button> \"), _createVNode(_component_router_link, {\n    to: {\n      name: 'SelectedPicks',\n      params: {\n        selectedpicks: $data.picks\n      }\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"to\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"strong\", null, _toDisplayString($data.picks), 1\n  /* TEXT */\n  )]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.games, (game, index) => {\n    return _openBlock(), _createElementBlock(\"table\", {\n      key: game.gameID,\n      class: _normalizeClass(game.gameID + 'game-table')\n    }, [_createElementVNode(\"tr\", {\n      class: _normalizeClass('away-row-' + index + '-' + game.gameID)\n    }, [_createElementVNode(\"td\", _hoisted_4, _toDisplayString(game.team1Name), 1\n    /* TEXT */\n    ), _createCommentVNode(\" need to do a check for fav/dog and o/u \"), _createCommentVNode(\" hit the api to get the data then run the check mentioned above \"), _createElementVNode(\"td\", _hoisted_5, [_createElementVNode(\"label\", {\n      for: game.gameID + '-fav'\n    }, null, 8\n    /* PROPS */\n    , _hoisted_6), _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.picks = $event),\n      type: \"checkbox\",\n      id: game.gameID + '-fav',\n      value: game.team1Name + $data.sample_spread\n    }, null, 8\n    /* PROPS */\n    , _hoisted_7), [[_vModelCheckbox, $data.picks]]), _createTextVNode(\" -\" + _toDisplayString($data.sample_spread), 1\n    /* TEXT */\n    )]), _createElementVNode(\"td\", _hoisted_8, \" o\" + _toDisplayString($data.sample_ou), 1\n    /* TEXT */\n    )], 2\n    /* CLASS */\n    ), _createElementVNode(\"tr\", {\n      class: _normalizeClass('home-row-' + index + '-' + game.gameID)\n    }, [_createElementVNode(\"td\", {\n      textContent: _toDisplayString(game.team2Name),\n      class: \"matchup-cell\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_9), _createElementVNode(\"td\", _hoisted_10, [_createElementVNode(\"label\", {\n      for: game.gameID + '-dog'\n    }, null, 8\n    /* PROPS */\n    , _hoisted_11), _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.picks = $event),\n      type: \"checkbox\",\n      id: game.gameID + '-dog',\n      value: game.team2Name + $data.sample_spread\n    }, null, 8\n    /* PROPS */\n    , _hoisted_12), [[_vModelCheckbox, $data.picks]]), _createTextVNode(\" +\" + _toDisplayString($data.sample_spread), 1\n    /* TEXT */\n    )]), _createElementVNode(\"td\", {\n      textContent: _toDisplayString('u' + $data.sample_ou),\n      class: \"pickem-cell\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_13)], 2\n    /* CLASS */\n    )], 2\n    /* CLASS */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;iDAEmF;;;EAE1EA,EAAE,EAAC;;;iDACC;;;EAKOC,KAAK,EAAG;;;EAKRA,KAAK,EAAC;;;;;EAKNA,KAAK,EAAC;;;;EAONA,KAAK,EAAC;;;;;;;;6DA1BtBC,iFACAC,aAAyGC,sBAAzG,EAAyG;IAA3FC,EAAE;MAAAC;MAAAC;QAAAC,eAAoDC;MAApD;IAAA;EAAyF,CAAzG;sBAA+E,MAAY;;;;GAA3F;;EAAA,WAEAC,oBAgCM,KAhCN,cAgCM,CA/BFA,oBAEM,KAFN,EAEM,IAFN,EAEM,aADcA,oBAA4B,QAA5B,EAA4B,IAA5B,EAA4BC,iBAAjBF,WAAiB,CAA5B,EAAgB;EAAA;EAAhB,CACd,CAFN,CA+BE,qBA5BFG,oBA2BQC,SA3BR,EA2BQ,IA3BR,EA2BQC,YA3B8BL,WA2B9B,EA3BmC,CAApBM,IAAoB,EAAfC,KAAe,KAAV;yBAAjCJ,oBA2BQ,OA3BR,EA2BQ;MA3BsCK,GAAG,EAAIF,IAAI,CAACG,MA2BlD;MA3B2DjB,KAAK,kBAAEc,IAAI,CAACG,MAAL,GAAW,YAAb;IA2BhE,CA3BR,GACIR,oBAcK,IAdL,EAcK;MAdAT,KAAK,gCAAce,KAAd,GAAmB,GAAnB,GAAwBD,IAAI,CAACG,MAA7B;IAcL,CAdL,GACIR,oBAEK,IAFL,cAEKC,iBADEI,IAAI,CAACI,SACP,CAFL,EACqB;IAAA;IADrB,GAGAjB,iEACAA,yFACAQ,oBAIK,IAJL,cAIK,CAHDA,oBAAyC,OAAzC,EAAyC;MAAjCU,GAAG,EAAEL,IAAI,CAACG,MAAL,GAAW;IAAiB,CAAzC;;IAAA,aAGC,kBAFDR,oBAAwG,OAAxG,EAAwG;iEAAxFD,cAAKY,OAAmF;MAAjFC,IAAI,EAAC,UAA4E;MAAhEtB,EAAE,EAAEe,IAAI,CAACG,MAAL,GAAW,MAAiD;MAAvCK,KAAK,EAAER,IAAI,CAACI,SAAL,GAAiBV;IAAe,CAAxG;;IAAA,kCAAgBA,cAEf,mBAFuG,OACvGE,iBAAGF,mBAAH,GAAgB;IAAA;KAChB,CAJL,GAKAC,oBAEK,IAFL,cAAwB,OACnBC,iBAAGF,eAAH,CADL,EACiB;IAAA;IADjB,EAXJ;;IAAA,GAeAC,oBAUK,IAVL,EAUK;MAVAT,KAAK,gCAAce,KAAd,GAAmB,GAAnB,GAAwBD,IAAI,CAACG,MAA7B;IAUL,CAVL,GACIR,oBACK,IADL,EACK;mBADDC,iBAAUI,IAAI,CAACS,SAAf,CACC;MADyBvB,KAAK,EAAG;IACjC,CADL;;IAAA,eAEAS,oBAIK,IAJL,eAIK,CAHDA,oBAAyC,OAAzC,EAAyC;MAAjCU,GAAG,EAAEL,IAAI,CAACG,MAAL,GAAW;IAAiB,CAAzC;;IAAA,cAGC,kBAFDR,oBAAwG,OAAxG,EAAwG;iEAAxFD,cAAKY,OAAmF;MAAjFC,IAAI,EAAC,UAA4E;MAAhEtB,EAAE,EAAEe,IAAI,CAACG,MAAL,GAAW,MAAiD;MAAvCK,KAAK,EAAER,IAAI,CAACS,SAAL,GAAiBf;IAAe,CAAxG;;IAAA,mCAAgBA,cAEf,mBAFuG,OACvGE,iBAAGF,mBAAH,GAAgB;IAAA;KAChB,CAJL,GAKAC,oBACK,IADL,EACK;mBADDC,iBAAwB,MAAVF,eAAd,CACC;MADwBR,KAAK,EAAC;IAC9B,CADL;;IAAA,eARJ;;IAAA,EAhBJ;;IAAA;GA2BQ,CA3BR;;EAAA,CA4BE,EAhCN","names":["id","class","_createCommentVNode","_createVNode","_component_router_link","to","name","params","selectedpicks","$data","_createElementVNode","_toDisplayString","_createElementBlock","_Fragment","_renderList","game","index","key","gameID","team1Name","for","$event","type","value","team2Name"],"sourceRoot":"","sources":["/Users/mabbate/michael-abbate/pickem-app-vue/pickem-app/src/views/ShowPicks.vue"],"sourcesContent":["<template>\n    <!-- <button @click=\"selectpicks()\">Go to Select</button> -->\n    <router-link :to=\"{ name: 'SelectedPicks', params: { selectedpicks: picks } }\">Go to Select</router-link>\n\n    <div id=\"show-picks\">\n        <div>\n            selected picks: <strong>{{ picks }}</strong>\n        </div>\n        <table v-cloak v-for=\"(game,index) in games\" :key = \"game.gameID\" :class=\"game.gameID+'game-table'\">\n            <tr :class=\"'away-row-'+index+'-'+game.gameID\">\n                <td class = \"matchup-cell\">\n                    {{ game.team1Name }}                    \n                </td>\n                <!-- need to do a check for fav/dog and o/u -->\n                <!-- hit the api to get the data then run the check mentioned above -->\n                <td class=\"pickem-cell\">          \n                    <label :for=\"game.gameID+'-fav'\"></label>\n                    <input v-model=\"picks\" type=\"checkbox\" :id=\"game.gameID+'-fav'\" :value=\"game.team1Name + sample_spread\">\n                    -{{ sample_spread }}\n                </td>\n                <td class=\"pickem-cell\">\n                    o{{ sample_ou }}\n                </td>     \n            </tr>        \n            <tr :class=\"'home-row-'+index+'-'+game.gameID\">\n                <td v-text = \"game.team2Name\" class = \"matchup-cell\">\n                </td>\n                <td class=\"pickem-cell\">\n                    <label :for=\"game.gameID+'-dog'\"></label>\n                    <input v-model=\"picks\" type=\"checkbox\" :id=\"game.gameID+'-dog'\" :value=\"game.team2Name + sample_spread\">\n                    +{{ sample_spread }}\n                </td>\n                <td v-text = \"'u'+sample_ou\" class=\"pickem-cell\">                    \n                </td>     \n            </tr>             \n        </table>\n    </div>\n</template>\n\n\n<script>\n\nimport axios from 'axios';\n\n// 8/30/21 to 9/6/21 below\n// FUTURE: can either use start and end date OR get all games every time and then filter accordingly based on date....\n// I think go with the latter as this is one API call with all odds already.\nlet all_games_url = \"http://localhost:8080/api/games.json?sport=nfl&startDate=1629763200000&endDate=1630972800000\"\n// let all_games_url = \"http://localhost:8080/api/odds.json?sport=nfl\"\n\nexport default {\n    name: \"ShowPicks\",\n    // props: [picks],\n    // props: {\n    //     picks: {\n    //         Array,\n    //         required: true\n    //     }\n    // },\n    // props: {\n    //     games: Map\n    // },\n    data() {\n        return {\n            games:null,\n            picks: [],                    \n            sample_spread: 7,\n            sample_ou: 48.5,\n            editIndex: -1,\n            fontSize: 15,\n            textSizeControlStyle: {\n                textAlign:'center',\n                cursor: 'pointer'\n            }\n        }\n    },\n    methods: {\n        selectpicks() {\n            console.log(\"USERS PICKS:\");\n            console.log(this.picks);\n            this.$router.push({name:\"SelectedPicks\"\n                              ,params: {selectedpicks:this.picks}});\n        }\n    },\n    mounted() {\n        axios\n        .get(all_games_url)\n        .then(response => {\n            console.log('SUCCESS');\n            console.log(response.data.results);\n            this.games = response.data.results\n            })\n        .catch(error => {\n            console.log(error)\n            this.errored = true\n            })\n    }\n}\n\n</script>\n\n<style scoped>\n\ntable {\n    margin: 0 auto;\n    border-collapse:separate; \n    border-spacing:.5em!important;\n    \n}\n.matchup-cell {\n    padding-right:.5em;\n    width: 5em;\n}\n.pickem-cell {\n    padding: 15px;\n    border:solid 2px dodgerblue;\n    background: white;\n    color: dodgerblue;\n    margin: 0 auto;\n    cursor: pointer;\n    border-radius:5px;\n    text-align:center;\n    width: 6em;\n    height:1em;\n    font-size: 1.4vw;\n}\n\n.pickem-cell:hover  {\n    background-color: dodgerblue;\n    color:white;\n    cursor:pointer;\n}\n</style>"]},"metadata":{},"sourceType":"module"}